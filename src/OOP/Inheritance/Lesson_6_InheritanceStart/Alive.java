package OOP.Inheritance.Lesson_6_InheritanceStart;
/*Создаем цепочку - 1) всё живое дышит - 2) все собаки живые - 3) все овчарки собаки
*        Значит все овчарки дышат
*
* Для этого делаем класс Alive, который родитель Dog и, соответственно, родитель Poodle и Shepherd
*
* ВАЖНО!
* Создавая абстрактные классы, мы определяем, что этот класс может делать:
*   живые  - дышат, едят, живут и тд
*   собаки - то же, что и живые, ещё и лают
*   пудель - неабстрактный - делает все, что могут делать живые и собаки
*
* Этот процесс называется КОНТРАКТОМ - создание абстрактного класса, которые имеет определенные методы,
* создавая своим наследникам обязательства
* (неабстрактный класс обязан исполльзовать все абстрактные методы своего абстрактного родителя).
* */
public abstract class Alive {
    public abstract void breath();
}
