package OOP.Polymorphism.start;

/*
* можно быстро реализовать абстрактный класс, поставив курсор на название класса и нажав Alt+Enter,
* и выбрать Implement Abstract class
*
* Если нам нужно создать массив экземпляров класса,
* то для этого нужно создать экземпляр от родителя, то есть
*
* Так:
*   Animal dog = new Dog();
*
* А не как обычно:
*   Dog dog = new Dog();
*
* И в таком случае экземпляр относится к родителю, и сможет выполнять только те методы, которые хранятся в родителе
*
* И вообще если экз-р класса имеет тип данных родителя (Animal), то он уже может исп-ть методы родителя
*
*В общем, это все делается для того, чтобы мы присвоили всем нужным нам классам один тип данных
* в нашем случае - Animal. Так как java в массивах работает только с одинаковыми типами данных
*
* Мы можем одни и те же классы (наследники от одного родителя) использовать в одинаковой плоскости
* Использовать одинаковые атрибуты, методы и тд.
*
* Так, в нашем примере, и кошка, и собака - животные, соответственно, они едят
* Значит можно создать один общий класс, один общий метод и тд
*
*/
public abstract class Animal {

    public abstract void eat();
}
